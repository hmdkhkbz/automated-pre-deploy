name: Terraform and Ansible Lint (ArvanCloud & Kolla-Ansible)

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint:
    name: Run Linters
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Terraform Linting (ArvanCloud)
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: '>= 1.0.0' # Adjust as needed

      - name: Terraform Format Check
        run: terraform fmt -check -recursive
        continue-on-error: true

      - name: Annotate Terraform Format Issues (if any)
        if: steps.terraform-format-check.outcome == 'failure'
        uses: actions/github-script@v7
        with:
          script: |
            const output = `terraform fmt -check -recursive\n${process.env.GITHUB_WORKSPACE}`;
            const lines = output.split('\n').filter(line => line.startsWith('Error:'));
            if (lines.length > 0) {
              lines.forEach(line => {
                const parts = line.split(':');
                if (parts.length >= 2) {
                  const file = parts[1].trim();
                  const lineNumberMatch = file.match(/(\d+)/);
                  const lineNumber = lineNumberMatch ? parseInt(lineNumberMatch[0]) : 1;
                  const message = parts.slice(2).join(':').trim();
                  core.error(message, { file, line: lineNumber });
                } else {
                  core.error(line);
                }
              });
              core.setFailed('Terraform formatting issues found. Please run "terraform fmt" to fix.');
            }

      - name: Terraform Validate
        run: terraform init && terraform validate
        continue-on-error: true

      - name: Annotate Terraform Validation Issues (if any)
        if: steps.terraform-validate.outcome == 'failure'
        uses: actions/github-script@v7
        with:
          script: |
            const output = `terraform init\nterraform validate\n${process.env.GITHUB_WORKSPACE}`;
            const lines = output.split('\n').filter(line => line.startsWith('Error:'));
            if (lines.length > 0) {
              lines.forEach(line => {
                const parts = line.split(':');
                if (parts.length >= 1) {
                  const message = parts.join(':').trim();
                  core.error(message);
                }
              });
              core.setFailed('Terraform validation issues found. Please review your configuration.');
            }

      # Ansible Linting (Kolla-Ansible)
      - name: Set up Python for Ansible Lint
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install Ansible and Ansible Lint
        run: |
          pip install ansible
          pip install ansible-lint

      - name: Run Ansible Lint
        run: ansible-lint
        continue-on-error: true

      - name: Annotate Ansible Lint Issues (if any)
        if: steps.ansible-lint.outcome == 'failure'
        uses: actions/github-script@v7
        with:
          script: |
            const output = `ansible-lint\n${process.env.GITHUB_WORKSPACE}`;
            const lines = output.split('\n').filter(line => line.includes(':') && line.includes('['));
            if (lines.length > 0) {
              lines.forEach(line => {
                const parts = line.split(':');
                if (parts.length >= 2) {
                  const file = parts[0].trim();
                  const lineNumberMatch = parts[1].trim().match(/^(\d+)/);
                  const lineNumber = lineNumberMatch ? parseInt(lineNumberMatch[1]) : 1;
                  const ruleMatch = line.match(/\[(.*?)\]/);
                  const rule = ruleMatch ? ruleMatch[1] : 'unknown';
                  const message = parts.slice(2).join(':').trim();
                  core.warning(`${message} (${rule})`, { file, line: lineNumber });
                } else {
                  core.warning(line);
                }
              });
              core.setFailed('Ansible linting issues found. Please address the warnings.');
            }
