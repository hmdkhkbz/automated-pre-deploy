---
- name: Update apt cache and upgrade packages
  apt:
    update_cache: yes
    upgrade: dist
  become: true

- name: Install required system packages
  apt:
    name:
      - python3
      - python3-pip
      - python3-venv
      - python3-dev
      - libffi-dev
      - gcc
      - libssl-dev
      - git
    state: present
  become: true

- name: Ensure pip is upgraded
  pip:
    name: pip
    executable: pip3
    state: latest

- name: Create Python virtual environment (if enabled)
  when: use_venv
  command: python3 -m venv {{ venv_path }}
  args:
    creates: "{{ venv_path }}"

- name: Set pip executable path
  set_fact:
    pip_exec: "{{ venv_path }}/bin/pip"
    ansible_galaxy_exec: "{{ venv_path }}/bin/ansible-galaxy"
  when: use_venv

- name: Set pip executable path fallback (when venv not used)
  set_fact:
    pip_exec: "pip3"
    ansible_galaxy_exec: "ansible-galaxy"
  when: not use_venv

- name: Install Ansible
  pip:
    name: "ansible>=8,<9"
    executable: "{{ pip_exec }}"

- name: Clone Kolla Ansible from Git
  git:
    repo: "{{ kolla_ansible_git_repo }}"
    dest: "{{ kolla_clone_dest }}"
    version: "{{ kolla_ansible_branch }}"
    force: yes

- name: Install Kolla-Ansible Python dependencies
  pip:
    requirements: "{{ kolla_clone_dest }}/requirements.txt"
    executable: "{{ pip_exec }}"

- name: Install Kolla-Ansible itself
  pip:
    name: "{{ kolla_clone_dest }}"
    executable: "{{ pip_exec }}"

- name: Install Ansible Galaxy dependencies
  command: "{{ ansible_galaxy_exec }} install -r requirements.yml"
  args:
    chdir: "{{ kolla_clone_dest }}"
  environment:
    PATH: "{{ venv_path }}/bin:{{ ansible_env.PATH }}"
  when: use_venv

- name: Ensure /etc/kolla exists
  file:
    path: /etc/kolla
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: 0755
  become: true

- name: Copy Kolla configuration defaults
  copy:
    src: "{{ item }}"
    dest: "/etc/kolla/{{ item | basename }}"
    remote_src: yes
  with_fileglob:
    - "{{ kolla_clone_dest }}/etc/kolla/*"
  become: true

- name: Ensure inventory destination directory exists
  file:
    path: "{{ kolla_inventory_dest }}"
    state: directory
    mode: 0755

- name: Copy multinode inventory
  copy:
    src: "{{ kolla_clone_dest }}/ansible/inventory/multinode"
    dest: "{{ kolla_inventory_dest }}/multinode"
    remote_src: yes
