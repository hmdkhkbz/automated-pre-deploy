---
- name: Update apt cache and upgrade packages
  apt:
    update_cache: yes
    upgrade: dist
  become: true

- name: Install required system packages
  apt:
    name:
      - python3
      - python3-pip
      - python3-venv
      - python3-dev
      - libffi-dev
      - gcc
      - libssl-dev
      - git
    state: present
  become: true

- name: Ensure pip is upgraded
  pip:
    name: pip
    executable: pip3
    state: latest

- name: Clone Kolla Ansible from Git
  git:
    repo: "{{ kolla_ansible_git_repo }}"
    dest: "{{ kolla_clone_dest }}"
    version: "{{ kolla_ansible_branch }}"
    force: yes

- name: Install Kolla-Ansible Python dependencies
  pip:
    requirements: "{{ kolla_clone_dest }}/requirements.txt"

- name: Install python3-venv package
  ansible.builtin.apt:
    name: python3-venv
    state: present
    update_cache: yes 
  become: yes
  tags:
    - venv

- name: Ensure parent directory for virtual environment exists
  ansible.builtin.file:
    path: "{{ venv_base_path }}"
    state: directory
    owner: root
    group: root
    mode: '0755'
  become: yes
  tags:
    - venv_setup

- name: Create Python virtual environment
  ansible.builtin.command:
    cmd: "python3 -m venv {{ venv_full_path }}"
  args:
    creates: "{{ venv_full_path }}/bin/activate" 
  become: yes
  tags:
    - venv_setup      

- name: Upgrade pip in the virtual environment
  ansible.builtin.pip:
    name: pip
    executable: "{{ venv_full_path }}/bin/pip"
    state: latest
  become: yes
  tags:
    - kolla_ansible_install

- name: Install Kolla-Ansible from Git
  ansible.builtin.pip:
    name: "git+https://opendev.org/openstack/kolla-ansible@master"
    executable: "{{ venv_full_path }}/bin/pip"
    state: present
  become: yes
  tags:
    - kolla_ansible_install

- name: Install Kolla-Ansible dependencies
  ansible.builtin.command:
    cmd: "{{ venv_full_path }}/bin/kolla-ansible install-deps"
  become: yes
  tags:
    - kolla_ansible_install

- name: Install Kolla-Ansible itself
  shell: |
    pip install kolla-ansible && kolla-ansible install-deps
  args:
    creates: "bin/kolla-ansible"
  register: kolla_ansible_install
  changed_when: kolla_ansible_install.rc == 0 and "Requirement already satisfied" not in kolla_ansible_install.stdout

- name: Ensure /etc/kolla exists
  file:
    path: /etc/kolla
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: 0755
  become: true

- name: download Kolla globals.yml files
  ansible.builtin.get_url:
    url: https://raw.githubusercontent.com/hmdkhkbz/glabals.yml/refs/heads/main/glabals.yml
    dest: /etc/kolla/globals.yml
    mode: '0644'
    owner: root
    group: root



- name: Copy Kolla example configuration files
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: "{{ kolla_config_dir }}"
    force: no
  with_items:
    - "{{ kolla_etc_examples_path }}/kolla/passwords.yml"

- name: Get checksum of current passwords.yml
  stat:
    path: "{{ kolla_passwords_file }}"
    checksum_algorithm: sha1
  register: current_pwd_file

- name: Get checksum of example passwords.yml
  stat:
    path: "{{ kolla_etc_examples_path }}/kolla/passwords.yml"
    checksum_algorithm: sha1
  register: example_pwd_file

- name: Generate passwords with kolla-genpwd if current passwords.yml matches example
  command: kolla-genpwd
  register: kolla_genpwd_result
  when: current_pwd_file.stat.checksum == example_pwd_file.stat.checksum
  changed_when: kolla_genpwd_result.rc == 0 and
                "Existing passwords.yml not modified" not in kolla_genpwd_result.stderr
  failed_when: kolla_genpwd_result.rc != 0 and
               "Existing passwords.yml not modified" not in kolla_genpwd_result.stderr

- name: Copy multinode inventory
  ansible.builtin.get_url:
    url: https://raw.githubusercontent.com/hmdkhkbz/multinode/refs/heads/main/multinode
    dest: "/root/multinode"
    mode: '0644'
    owner: root
    group: root    
